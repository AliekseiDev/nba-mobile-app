export default (data) => {
  let errors = [];

  let newData = {...data};
  newData.validation = newData.validation || {};

  let info = newData.validation,
      value = newData.value;

  if (info.required) {
    let err;
    if (typeof info.required === 'string') err = info.required; 
    if (value.trim() === '') errors.push(`${err || `Can't be blank.`}`);
  }

  if (info.minLength) {
    if (newData.value.length < info.minLength) errors.push(`Length should be more then ${info.minLength}.`);
  }

  if (info.maxLength) {
    if (newData.value.length > info.maxLength) errors.push(`Length should be less then ${info.maxLength}.`);
  }

  if (info.test) {
    info.test.forEach((item) => {
      if (item.fn(newData.value)) return;
      errors.push(item.message); 
    });
  }
  
  if (!errors.length)
    info.valid = true;
  else
    info.valid = false;
  
  info.validationMessage = errors.join(' ');

  return newData;
}