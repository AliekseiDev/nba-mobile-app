import React, { Component } from 'react';
import { Link } from 'react-router-dom';


import style from './videosList.css';
import VideosListTemplate from './videosListTemplate';
import Loading from 'components/Loading';
import Empty from '../Empty';
import { actions } from '_firebase';

class VideosList extends Component {

  state = {
    fetching: false,
    teams: [],
    videos: [],
    start: this.props.start,
    amount: this.props.amount,
    noContent: false
  }

  request = async (start) => {
    this.setState({fetching: true});
    if (!this.state.teams.length) {
      let teams = await actions.fetchTeams();
      this.setState({teams})
    }

    let videos = await actions.findArticles('videos', this.state.start, this.state.amount);

    start = this.state.start + this.state.amount;
    this.setState({
      videos: this.state.videos.concat(videos), 
      start,
      fetching: false,
      noContent: videos.length ? false : true
    });

  }

  componentDidMount() {
    this.request(this.state.start);
  }

  loadmore = () => {
    if (this.state.fetching) return;

    this.setState({fetching: true});
    this.request(this.state.start);
  }

  renderTitle = () => {
    return this.props.title ? 
    <h3><strong>NBA</strong> Videos</h3> : 
    null;
  }

  renderButton = () => {
    return (this.props.loadmore && this.state.videos.length && !this.state.noContent) ?

    <div 
      className={`${(this.state.fetching ? style.loading : '')} ${style.btn_loadmore}`}
      onClick={this.loadmore}
    >
      Load more
    </div>

    :
      !this.props.loadmore ?
          <Link to="/videos" className={style.btn_link}>More videos</Link>
        :
          null;

  }

  renderList = () => {
    return this.state.videos.length ? (
      <VideosListTemplate
        type={this.props.type}
        videos={this.state.videos}
        teams={this.state.teams}
      />
    ) : (
      this.state.fetching ?
        <div className={style.empty}>
          <Loading/>
        </div>
      :
      null
    );
  }

  renderEmpty  = () => (
    !this.state.videos.length && !this.state.fetching ? 
      <Empty/>
    :
      null
  )

  render() {
    return (
      <div className={style.wrapper}>
        {this.renderTitle()}
        {this.renderEmpty()}
        {this.renderList()}
        {this.renderButton()}
      </div>
    );
  }
}

export default VideosList;